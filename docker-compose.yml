# docker-compose.yml - Local development environment
version: '3.8'

services:
  # Flask web application
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - PORT=5000
      - REDIS_URL=${REDIS_URL}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - UNSPLASH_ACCESS_KEY=${UNSPLASH_ACCESS_KEY}
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL}
      - FRONTEND_URL=${FRONTEND_URL}
    volumes:
      - .:/app
    depends_on:
      worker:
        condition: service_started
    restart: unless-stopped

  # Celery worker for background jobs
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - FLASK_ENV=development
      - REDIS_URL=${REDIS_URL}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - UNSPLASH_ACCESS_KEY=${UNSPLASH_ACCESS_KEY}
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL}
      - FRONTEND_URL=${FRONTEND_URL}
    volumes:
      - .:/app
    # Uses Azure Redis - no local dependency needed
    restart: unless-stopped

  # Flower - Celery monitoring dashboard
  flower:
    build:
      context: .
      dockerfile: Dockerfile.worker
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=${REDIS_URL}
    command: ["celery", "-A", "tasks.worker:celery_app", "flower", "--port=5555"]
    # Uses Azure Redis - no local dependency needed
    restart: unless-stopped

# No volumes needed - using Azure services